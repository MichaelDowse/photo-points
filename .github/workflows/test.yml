name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Run analyzer
      run: flutter analyze
      
    - name: Check formatting
      run: dart format --set-exit-if-changed .
      
    - name: Run unit tests
      run: flutter test test/unit/ --coverage --coverage-path=coverage/unit_coverage.lcov
      
    - name: Run widget tests
      run: flutter test test/widget/ --coverage --coverage-path=coverage/widget_coverage.lcov
      
    - name: Run integration tests
      run: flutter test test/integration/ --coverage --coverage-path=coverage/integration_coverage.lcov
      
    - name: Run all tests with coverage
      run: flutter test --coverage --coverage-path=coverage/lcov.info
      
    - name: Install lcov
      run: sudo apt-get update && sudo apt-get install -y lcov
      
    - name: Generate HTML coverage report
      run: genhtml coverage/lcov.info -o coverage/html
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Archive coverage results
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read coverage info
          const lcovPath = 'coverage/lcov.info';
          if (fs.existsSync(lcovPath)) {
            const lcovData = fs.readFileSync(lcovPath, 'utf8');
            const lines = lcovData.split('\n');
            
            let totalLines = 0;
            let coveredLines = 0;
            
            lines.forEach(line => {
              if (line.startsWith('LF:')) {
                totalLines += parseInt(line.split(':')[1]);
              } else if (line.startsWith('LH:')) {
                coveredLines += parseInt(line.split(':')[1]);
              }
            });
            
            const coverage = totalLines > 0 ? Math.round((coveredLines / totalLines) * 100) : 0;
            
            const comment = `## üìä Test Coverage Report
            
            **Line Coverage:** ${coverage}%
            **Lines Covered:** ${coveredLines}/${totalLines}
            
            ${coverage >= 80 ? '‚úÖ Coverage threshold met!' : '‚ö†Ô∏è Coverage below 80% threshold'}
            
            View full report in the artifacts.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  integration-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Run integration tests
      run: flutter test integration_test/
      
    - name: Archive integration test results
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: integration_test/

  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.3'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Test build (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
        flutter build linux --debug
        
    - name: Test build (macOS)
      if: matrix.os == 'macos-latest'
      run: flutter build macos --debug
      
    - name: Test build (Windows)
      if: matrix.os == 'windows-latest'
      run: flutter build windows --debug